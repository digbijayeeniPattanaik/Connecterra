{
  "openapi": "3.0.1",
  "info": {
    "title": "Farm API",
    "version": "v1"
  },
  "paths": {
    "/api/Audit": {
      "get": {
        "tags": [
          "Audit"
        ],
        "summary": "Get Audit List",
        "parameters": [
          {
            "name": "onDate",
            "in": "query",
            "description": "onDate",
            "schema": {
              "type": "string",
              "description": "onDate",
              "format": "date-time",
              "nullable": true
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "state Like if SearchType is Cows then ->State: Open, Inseminated, Pregnant, Dry. If SearchType is Sensor ->State: Inventory, Deployed, FarmerTriage, Returned, Dead, Refurbished",
            "schema": {
              "type": "string",
              "description": "state Like if SearchType is Cows then ->State: Open, Inseminated, Pregnant, Dry. If SearchType is Sensor ->State: Inventory, Deployed, FarmerTriage, Returned, Dead, Refurbished",
              "nullable": true
            }
          },
          {
            "name": "searchType",
            "in": "query",
            "description": "searchType like Cows or Sensors",
            "schema": {
              "type": "string",
              "description": "searchType like Cows or Sensors",
              "nullable": true
            }
          },
          {
            "name": "farm",
            "in": "query",
            "description": "Farm name",
            "schema": {
              "type": "string",
              "description": "Farm name",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Audit"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Audit"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Audit"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cows": {
      "get": {
        "tags": [
          "Cows"
        ],
        "summary": "Get list of cows",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CowDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CowDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CowDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cows/{id}": {
      "get": {
        "tags": [
          "Cows"
        ],
        "summary": "Get Cow based on cow ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Cow Id",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Cow Id",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CowDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CowDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CowDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cows/{cowId}": {
      "put": {
        "tags": [
          "Cows"
        ],
        "summary": "Update the cow's status based on CowId",
        "parameters": [
          {
            "name": "cowId",
            "in": "path",
            "description": "cowId to update cow",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "cowId to update cow",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "Dto to update status",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/CowDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CowDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/CowDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Cows/count": {
      "get": {
        "tags": [
          "Cows"
        ],
        "summary": "Get Cow count base on farm , state and Date",
        "parameters": [
          {
            "name": "farm",
            "in": "query",
            "description": "farm",
            "schema": {
              "type": "string",
              "description": "farm",
              "nullable": true
            }
          },
          {
            "name": "state",
            "in": "query",
            "description": "state like Open, Inseminated, Pregnant, Dry",
            "schema": {
              "type": "string",
              "description": "state like Open, Inseminated, Pregnant, Dry",
              "nullable": true
            }
          },
          {
            "name": "onDate",
            "in": "query",
            "description": "onDate",
            "schema": {
              "type": "string",
              "description": "onDate",
              "format": "date-time"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Farm": {
      "get": {
        "tags": [
          "Farm"
        ],
        "summary": "Get list of Farms",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Farm"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Farm"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Farm"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sensors": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "summary": "Get list of Sensors",
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SensorDto"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SensorDto"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/SensorDto"
                  }
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Sensors"
        ],
        "summary": "Add a Sensor",
        "requestBody": {
          "description": "Sensor object",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/SensorAddDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/SensorAddDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/SensorAddDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sensors/{id}": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "summary": "Get Sensor based on Sensor ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "sensor ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "sensor ID",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sensors/{sensorId}": {
      "put": {
        "tags": [
          "Sensors"
        ],
        "summary": "Update a Sensor",
        "parameters": [
          {
            "name": "sensorId",
            "in": "path",
            "description": "Sensor ID",
            "required": true,
            "schema": {
              "type": "integer",
              "description": "Sensor ID",
              "format": "int32"
            }
          }
        ],
        "requestBody": {
          "description": "State dto",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/StateDto"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/StateDto"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/StateDto"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDto"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDto"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/SensorDto"
                }
              }
            }
          },
          "404": {
            "description": "Not Found",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sensors/average": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "summary": "Get Sensor Average per month",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "Sensor state like Inventory, Deployed, FarmerTriage, Returned, Dead, Refurbished",
            "schema": {
              "type": "string",
              "description": "Sensor state like Inventory, Deployed, FarmerTriage, Returned, Dead, Refurbished",
              "nullable": true
            }
          },
          {
            "name": "year",
            "in": "query",
            "description": "Year",
            "schema": {
              "type": "integer",
              "description": "Year",
              "format": "int32"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "application/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              },
              "text/json": {
                "schema": {
                  "type": "number",
                  "format": "double"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/api/Sensors/count": {
      "get": {
        "tags": [
          "Sensors"
        ],
        "summary": "Get Sensor Count per month",
        "parameters": [
          {
            "name": "state",
            "in": "query",
            "description": "Sensor state like Inventory, Deployed, FarmerTriage, Returned, Dead, Refurbished",
            "schema": {
              "type": "string",
              "description": "Sensor state like Inventory, Deployed, FarmerTriage, Returned, Dead, Refurbished",
              "nullable": true
            }
          },
          {
            "name": "month",
            "in": "query",
            "description": "Month like January ,February ,March ,April ,May ,June ,July ,August ,September ,October ,November ,December",
            "schema": {
              "type": "string",
              "description": "Month like January ,February ,March ,April ,May ,June ,July ,August ,September ,October ,November ,December",
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              },
              "text/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProblemDetails"
                }
              }
            }
          }
        }
      }
    },
    "/WeatherForecast": {
      "get": {
        "tags": [
          "WeatherForecast"
        ],
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/WeatherForecast"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Audit": {
        "type": "object",
        "properties": {
          "auditId": {
            "type": "integer",
            "format": "int32"
          },
          "tableName": {
            "type": "string",
            "nullable": true
          },
          "auditDate": {
            "type": "string",
            "format": "date-time"
          },
          "keyValues": {
            "type": "string",
            "nullable": true
          },
          "oldValues": {
            "type": "string",
            "nullable": true
          },
          "newValues": {
            "type": "string",
            "nullable": true
          },
          "newValuesSerialized": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProblemDetails": {
        "type": "object",
        "properties": {
          "type": {
            "type": "string",
            "nullable": true
          },
          "title": {
            "type": "string",
            "nullable": true
          },
          "status": {
            "type": "integer",
            "format": "int32",
            "nullable": true
          },
          "detail": {
            "type": "string",
            "nullable": true
          },
          "instance": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": { }
      },
      "CowDto": {
        "type": "object",
        "properties": {
          "cowId": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "farm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StateDto": {
        "required": [
          "state"
        ],
        "type": "object",
        "properties": {
          "state": {
            "type": "string"
          }
        },
        "additionalProperties": false
      },
      "Farm": {
        "type": "object",
        "properties": {
          "farmId": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SensorDto": {
        "type": "object",
        "properties": {
          "sensorId": {
            "type": "integer",
            "format": "int32"
          },
          "state": {
            "type": "string",
            "nullable": true
          },
          "farm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "SensorAddDto": {
        "type": "object",
        "properties": {
          "state": {
            "type": "string",
            "nullable": true
          },
          "farm": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WeatherForecast": {
        "type": "object",
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "temperatureC": {
            "type": "integer",
            "format": "int32"
          },
          "temperatureF": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "summary": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      }
    }
  }
}